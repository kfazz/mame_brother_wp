#!/usr/bin/make -f
# -*- makefile -*-
# This file was originally written by Joey Hess and Craig Small.
# As a special exception, when this file is copied by dh-make into a
# dh-make output file, you may use that output file without restriction.
# This special exception was added by Craig Small in version 0.37 of dh-make.
# Default/i386/amd64 options from sdlmame rules file by Cesare Falco.

# Uncomment this to turn on verbose mode.
#export DH_VERBOSE=1

CFLAGS = -Wall -g

DEB_HOST_ARCH := $(shell dpkg-architecture -qDEB_HOST_ARCH)

# Number of make jobs = number of cores + 1
NJOBS:=$(shell echo $$(($$(getconf _NPROCESSORS_ONLN 2>/dev/null) + 1)))
ifdef SETNJOBS
	NJOBS:=$(SETNJOBS)
endif

# Override relevant make variables in original makefile
DEB_MAME_OPTS = \
    OPT_FLAGS="-D'INI_PATH=\"/etc/mame\"'" \
    FULLNAME=mame \
    TARGET=mame \
    SUBTARGET=mame \
    OSD=sdl \
    CROSS_BUILD_OSD= \
    NOASM=1 \
    PREFIX= \
    SUFFIX= \
    DEBUG= \
    PROFILER= \
    NOWERROR= \
    MACOSX_USE_LIBSDL= \
    BUILD_EXPAT= \
    BUILD_ZLIB= \
    BUILD_JPEGLIB= \
    BUILD_FLAC= \
    SYMBOLS= \
    SYMLEVEL= \
    DUMPSYM= \
    PROFILE= \
    MAP= \
    VERBOSE= \
    OPTIMIZE=2 \
    LDFLAGS="-Wl,--as-needed" \
    LDFLAGSEMULATOR="-Wl,--as-needed" \
    NOWERROR=1 \

# Override make variables for specific archs
# Linux architectures
ifeq ($(DEB_HOST_ARCH),amd64)
DEB_MAME_OPTS += \
    ARCHOPTS=-march=athlon64 \
    FORCE_DRC_C_BACKEND= \
    PTR64=1 \
    NOASM= \
    BIGENDIAN=
endif

ifeq ($(DEB_HOST_ARCH),i386)
DEB_MAME_OPTS += \
    ARCHOPTS=-march=pentium2 \
    FORCE_DRC_C_BACKEND= \
    PTR64= \
    NOASM= \
    BIGENDIAN=
endif

ifeq ($(DEB_HOST_ARCH),ia64)
DEB_MAME_OPTS += \
    FORCE_DRC_C_BACKEND=1 \
    PTR64=1 \
    NOASM=1 \
    BIGENDIAN=
endif

ifeq ($(DEB_HOST_ARCH),mips)
DEB_MAME_OPTS += \
    ARCHOPTS=-Umips \
    FORCE_DRC_C_BACKEND=1 \
    BIGENDIAN=1
endif

ifeq ($(DEB_HOST_ARCH),mipsel)
DEB_MAME_OPTS += \
    ARCHOPTS=-Umips \
    FORCE_DRC_C_BACKEND=1
endif

ifeq ($(DEB_HOST_ARCH),powerpc)
DEB_MAME_OPTS += \
    ARCHOPTS=-Upowerpc \
    FORCE_DRC_C_BACKEND=1 \
    NOASM= \
    BIGENDIAN=1
endif

ifeq ($(DEB_HOST_ARCH),s390)
DEB_MAME_OPTS += \
    FORCE_DRC_C_BACKEND=1 \
    BIGENDIAN=1
endif

ifeq ($(DEB_HOST_ARCH),s390x)
DEB_MAME_OPTS += \
    FORCE_DRC_C_BACKEND=1 \
    PTR64=1 \
    BIGENDIAN=1
endif

ifeq ($(DEB_HOST_ARCH),sparc)
DEB_MAME_OPTS += \
    FORCE_DRC_C_BACKEND=1 \
    BIGENDIAN=1
endif

# kFreeBSD architectures
ifeq ($(DEB_HOST_ARCH),kfreebsd-amd64)
DEB_MAME_OPTS += \
    TARGETOS=freebsd \
    PTR64=1 \
    FORCE_DRC_C_BACKEND= \
    NOASM= \
    BIGENDIAN=
endif

ifeq ($(DEB_HOST_ARCH),kfreebsd-i386)
DEB_MAME_OPTS += \
    TARGETOS=freebsd \
    FORCE_DRC_C_BACKEND= \
    PTR64= \
    NOASM= \
    BIGENDIAN=
endif

%:
	dh $@

override_dh_auto_build:
	$(MAKE) -j$(NJOBS) $(DEB_MAME_OPTS)
	$(CURDIR)/mame -createconfig
	mv mame.ini default.mame.ini

override_dh_auto_clean:
	echo "Starting clean process..."
	$(MAKE) $(DEB_MAME_OPTS) clean
	rm -rf obj
	rm -f default.mame.ini

# dh_installchangelogs doesn't know about whatsnew.txt,
# so we need to make an explicit call
override_dh_installchangelogs:
	dh_installchangelogs whatsnew.txt

# Remove Windows specific documentation
override_dh_installdocs:
	dh_installdocs --exclude=license.txt \
                   --exclude=windows.txt \
                   --exclude=newvideo.txt

# Remove OSX specific keymaps
override_dh_install:
	# some data files created on windows show up as executables: fix it
	dh_install --exclude=OSX.txt


# Convert upstream sources from zip to tar.xz
VERSION := $(shell dpkg-parsechangelog | sed -ne 's/^Version: \(.*\)-.*/\1/p')

# Upstream zip file does not have a dot in its name, so we have to cut it out
UPSTREAM_VERSION := $(shell echo $(VERSION) | sed -e 's/\.//' )

AGENT = Debian MAME Packagers <mame@packages.debian.org>
TMPDIR := $(shell mktemp --dry-run --directory -p .)

MAME_PACKAGE = mame
MAME_FILEBASE = $(MAME_PACKAGE)$(VERSION)
MAME_URL = http://mamedev.org/downloader.php?file=releases/
MAME_TARBALL = $(MAME_PACKAGE)_$(VERSION).orig.tar.xz

$(MAME_FILEBASE)s.zip:
	wget -U '$(AGENT)' \
        "$(MAME_URL)$(MAME_PACKAGE)$(UPSTREAM_VERSION)s.zip" \
        -O $(MAME_FILEBASE)s.zip

$(MAME_TARBALL): $(MAME_FILEBASE)s.zip
	mkdir $(TMPDIR)

	# Create an orig.tar.xz tarball for MAME
	unzip $(MAME_FILEBASE)s.zip -d $(TMPDIR)
	mkdir -p $(TMPDIR)/sub/$(MAME_PACKAGE)-$(VERSION)
	# Not a bug: Mame source needs to be unzipped twice
	unzip $(TMPDIR)/$(MAME_PACKAGE).zip \
	    -d $(TMPDIR)/sub/$(MAME_PACKAGE)-$(VERSION)
	# Strip trailing CR
	find $(TMPDIR)/sub/$(MAME_PACKAGE)-$(VERSION) \
	    -type f -regextype posix-egrep \
	    ! -regex ".*(zip|gif|png|bmp|ico)" \
	    | sed 's/\ /\\\ /g' \
	    | xargs sed -i "s/\r$$//"
	tar -C $(TMPDIR)/sub -cvf - $(MAME_PACKAGE)-$(VERSION) | \
	    xz > $(MAME_TARBALL)
	rm -f $(MAME_FILEBASE)s.zip

	rm -rf $(TMPDIR)

# FIXME: nplayers should go in the forthcoming mame-extra package
NPLAYERS_PACKAGE = nplayers
NPLAYERS_URL = http://nplayers.arcadebelgium.be/files/
NPLAYERS_ZIPFILE = $(NPLAYERS_PACKAGE)$(UPSTREAM_VERSION).zip
NPLAYERS_TARBALL = $(MAME_PACKAGE)_$(VERSION).orig-$(NPLAYERS_PACKAGE).tar.xz

$(NPLAYERS_ZIPFILE):
	wget -U '$(AGENT)' \
	    $(NPLAYERS_URL)$(NPLAYERS_ZIPFILE)

$(NPLAYERS_TARBALL): $(NPLAYERS_ZIPFILE)
	mkdir $(TMPDIR)
	unzip $(NPLAYERS_ZIPFILE) -d $(TMPDIR)/$(NPLAYERS_PACKAGE)
	# Strip trailing CR
	find $(TMPDIR)/$(NPLAYERS_PACKAGE) -type f | xargs sed -i "s/\r$$//"
	tar -C $(TMPDIR) -cvf - $(NPLAYERS_PACKAGE) | xz > $(NPLAYERS_TARBALL)
	rm -f $(NPLAYERS_ZIPFILE)
	rm -rf $(TMPDIR)

get-orig-source: $(MAME_TARBALL) $(NPLAYERS_TARBALL)

erase-upstream: clean
	rm -rf artwork
	rm -rf docs
	rm -rf hash
	rm -rf hlsl
	rm -f makefile
	rm -rf obj
	rm -rf src
	rm -f whatsnew*.txt
	rm -rf nplayers
